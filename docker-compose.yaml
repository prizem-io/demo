version: '3'
services:

  # Control Plane

  jaeger:
    image: jaegertracing/all-in-one:1.6
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    environment:
      - "COLLECTOR_ZIPKIN_HTTP_PORT=9411"

  postgres1:
    image: postgres:latest
    volumes:
      - "./pgdata:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=mysecretpassword"

  control-plane:
    image: prizem-io/control-plane:latest
    depends_on:
      - postgres1
    ports:
      - "9000:8000"
    volumes:
      - "./etc/control-plane:/app/etc"

  proxy:
    image: prizem-io/proxy:latest
    depends_on:
      - control-plane
      - jaeger
    ports:
      - "8000:50052"
      - "6060:6060"
    volumes:
      - "./etc/proxy:/app/etc"
    environment:
      - "REST_API_URI=http://control-plane:8000"
      - "GRPC_API_TARGET=control-plane:9000"
      - "JAEGER_AGENT_HOST=jaeger"
      - "JAEGER_AGENT_PORT=6831"
      - "MIXER_TARGET=mixer:9091"

  proxy-resolve:
    build:
      context: .
      dockerfile: docker/Dockerfile.proxy-resolve
    image: prizem-io/demo-proxy-resolve
    depends_on:
      - proxy
    volumes:
      - "./etc/proxy:/app/etc"
    environment:
      - "PROXY_HOST=proxy"
      - "PROXY_FILE=etc/proxy-ip.txt"

  proxy-inject:
    build:
      context: .
      dockerfile: docker/Dockerfile.proxy-inject
    image: prizem-io/demo-proxy-inject
    network_mode: host
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    depends_on:
      - proxy
      - proxy-resolve
    volumes:
      - "./etc/proxy:/usr/local/bin/etc"
    environment:
      - "PROXY_HOST=proxy"
      - "PROXY_PORT=50062"
      - "PROXY_FILE=etc/proxy-ip.txt"

  # Services

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    image: prizem-io/demo-frontend
    environment:
      - "BACKEND_URI=http://api.prizem.io/message"

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    image: prizem-io/demo-backend
    environment:
      - "MESSAGE_URI=http://api.prizem.io/sayHello"

  message:
    build:
      context: .
      dockerfile: docker/Dockerfile.message
    image: prizem-io/demo-message

  announce:
    build:
      context: .
      dockerfile: docker/Dockerfile.announce
    image: prizem-io/demo-announce
    depends_on:
      - proxy
      - frontend
      - backend
      - message
    environment:
      - "REGISTER_URI=http://proxy:6060/register"
      - "SERVICES=frontend:8000,backend:8000,message:8000"
